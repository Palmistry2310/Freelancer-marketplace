<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My jobs - earnwave</title>
    <link rel="stylesheet" href="/public/navbar.css" />
    <link rel="stylesheet" href="/public/myjob.css" />
    <!-- Google fonts  -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Handlee&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <%- include('../../components/navbar.ejs') %>
    <main>
      <h1>My jobs</h1>
      <div class="jobs-grid">
        <% myjobs.forEach((job, index) => { %>
        <div class="job-card" id="jobcard-<%=index%>">
          <div class="job-header">
            <div class="job-title-section">
              <div class="job-icon">
                <img
                  src="https://www.ledr.com/colours/white.jpg"
                  alt="Job icon"
                  class="icon"
                />
              </div>
              <div class="job-info">
                <h2><%= job.title %></h2>
                <span class="time">
                  <%= (function() { const diffInSeconds = (new Date().getTime()
                  - new Date(job.updatedAt).getTime()) / 1000; if (diffInSeconds
                  < 60) return Math.floor(diffInSeconds) + ' seconds ago'; if
                  (diffInSeconds < 3600) return Math.floor(diffInSeconds / 60) +
                  ' minutes ago'; if (diffInSeconds < 86400) return
                  Math.floor(diffInSeconds / 3600) + ' hours ago'; return
                  Math.floor(diffInSeconds / 86400) + ' days ago'; })() %>
                </span>
              </div>
            </div>
            <div class="menu-container">
              <button class="menu-button" onclick="toggleMenu(this)">
                <img
                  src="https://uxwing.com/wp-content/themes/uxwing/download/web-app-development/3-vertical-dots-icon.png"
                  width="15"
                  height="15"
                  alt=""
                />
              </button>
              <div class="dropdown-menu">
                <!-- <button onclick="openEditModal('jobcard-<%=index%>')">Edit</button> -->
                <button data-id="<%= job._id %>" onclick="openEditModal(this)">
                  Edit
                </button>
                <button data-id="<%=job._id%>" onclick="openDeleteModal(this)">Delete</button>
              </div>
            </div>
          </div>

          <div class="job-details">
            <p class="job-meta">
              <b>Budget:</b> ₹<%= job.budget %> · <b>Est. Time:</b> <%= new
              Date(job.deadline).toDateString() %>
            </p>
            <p class="job-description"><%= job.desc %></p>
          </div>

          <div class="job-tags">
            <% job.skillsRequired.forEach(function(tag) { %>
            <span class="tag"><%= tag %></span>
            <% }); %>
          </div>
        </div>

        <!-- Edit Modal -->
        <div class="modal" id="jobcardmodal-<%=index%>">
          <div class="modal-content">
            <h2>Edit Job</h2>

            <form id="updatedForm" action="#">
              <div class="form-group">
                <label for="editTitle">Job Title</label>
                <input
                  type="text"
                  id="editTitle"
                  name="title"
                  value=""
                  required
                />
              </div>

              <div class="form-group">
                <label for="editDescription">Job Description</label>
                <textarea id="editDescription" name="desc" required></textarea
                >
              </div>
              <div class="form-group">
                <label for="editbudget">Budget</label>
                <input
                  type="number"
                  id="editbudget"
                  name="budget"
                  value=""
                  required
                />
              </div>

              <div class="form-group">
                <label for="editdeadline">Deadline</label>
                <input
                  type="date"
                  id="editdeadline"
                  name="deadline"
                  required
                  value=""
                />
              </div>
              <!-- <%= new Date(job.deadline).toISOString().substr(0, 10);%> -->

              <div class="form-group">
                <label for="editskills-input">Required Skills</label>
                <input type="text" id="editskills-input" name="skillsRequired"
                value="" />
              </div>

              <div class="modal-buttons">
                <button
                  type="button"
                  onclick="closeEditModal('jobcard-<%=index%>')"
                >
                  Cancel
                </button>
                <button type="submit" id="update_btn"  data_info="" onclick="handleUpdate(this)">Update</button>
              </div>
            </form>
          </div>
        </div>

        <!-- Delete Modal -->
        <div id="deleteModal" class="modal">
          <div class="modal-content">
            <h2>Confirm Delete</h2>
            <p>Are you sure you want to delete this job posting?</p>
            <div class="modal-buttons">
              <button onclick="closeDeleteModal()">Cancel</button>
              <button id="delete-btn"  id_info="" onclick="deleteJob(this)">

                Delete
              </button>
            </div>
          </div>
        </div>

        <% }) %>
      </div>
    </main>
    <script>

      const jobsData = <%- JSON.stringify(myjobs)%>;

      function handleUpdate(button)
    {

      document.getElementById("updatedForm").addEventListener("submit", async (event) => {
          event.preventDefault();
          const jobId=button.getAttribute("data_info")
          console.log(jobId)
          const data = {
            jobId,
            title: document.getElementById("editTitle").value,
            desc: document.getElementById("editDescription").value,
            budget: document.getElementById("editbudget").value,
            deadline: document.getElementById("editdeadline").value,
            skillsRequired: document.getElementById("editskills-input").value,
          };
          console.log(data);

          const response = await fetch("/jobs/editmyjob",{
            method:"PUT",
            headers:{"content-type":"application/json"},
            body:JSON.stringify(data)
          })

          const result= await response.json()
          
          
          if (response.ok){
            alert(result.message)
            location.reload()
          }else{
            alert(result.message)
          }
          
        });

    }

      // Toggle dropdown menu
      function toggleMenu(button) {
        const dropdown = button.nextElementSibling;
        dropdown.classList.toggle("active");

        // Close dropdown when clicking outside
        document.addEventListener("click", function closeDropdown(e) {
          if (!button.contains(e.target) && !dropdown.contains(e.target)) {
            dropdown.classList.remove("active");
            document.removeEventListener("click", closeDropdown);
          }
        });
      }


      // Modal functions
      function openEditModal(button) {


        const jobId = button.getAttribute("data-id");
        console.log(jobId); 

        const job = jobsData.find(j => j._id === jobId);
        if (!job) return;


        //updaing modals content
        document.getElementById("editTitle").value = job.title;
        document.getElementById("editbudget").value = job.budget;
        document.getElementById("editdeadline").value =new Date(job.deadline).toISOString().substr(0, 10);
        document.getElementById("editDescription").textContent =job.desc;
        document.getElementById("editskills-input").value=job.skillsRequired;

        document.getElementById("update_btn").setAttribute("data_info",job._id)


        document.querySelector(".modal").classList.add("active");
      }

      function closeEditModal(jobCardNumber) {
        let jobCardmodal = jobCardNumber.split("-")[1];
        document
          .getElementById(`jobcardmodal-${jobCardmodal}`)
          .classList.remove("active");
      }

      function openDeleteModal(button) {
        const id=button.getAttribute("data-id")
        console.log(id,"from delete")
        document.getElementById("delete-btn").setAttribute("id_info",id)


        document.getElementById("deleteModal").classList.add("active");
      }

      function closeDeleteModal() {
        document.getElementById("deleteModal").classList.remove("active");
      }

      // Delete handler
    async function deleteJob(button) {
      const jobId=button.getAttribute("id_info")
        console.log(jobId)
        const data={jobId:jobId}

        const response = await fetch("/jobs/deletemyjob",{
            method:"delete",
            headers:{"content-type":"application/json"},
            body:JSON.stringify(data)
          })

          const result= await response.json()
          
          
          if (response.ok){
            alert(result.message)
            location.reload()
          }else{
            alert(result.message)
          }

        closeDeleteModal();
      }

    </script>
  </body>
</html>
